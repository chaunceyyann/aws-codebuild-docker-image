# aws-codebuild-docker-image/.github/workflows/deploy-infra.yml

name: Deploy AWS Infrastructure

on:
  pull_request:
    branches: [main, dev]
  workflow_dispatch: # Allow manual trigger
    inputs:
      apply_changes:
        description: 'Apply Terraform changes after plan'
        required: false
        default: true
        type: boolean

      use_codebuild_runner:
        description: 'Use AWS CodeBuild as runner instead of GitHub-hosted runner'
        required: false
        default: true
        type: boolean

      aws_region:
        description: 'AWS region for deployment'
        required: false
        default: 'us-east-1'
        type: choice
        options:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - eu-west-1
          - eu-central-1
          - ap-southeast-1
          - ap-northeast-1

jobs:
  DeployECRAndCodeBuild:
    runs-on: ${{ github.event_name == 'workflow_dispatch' && inputs.use_codebuild_runner == true && format('codebuild-runner-{0}-{1}-{2}', github.event.repository.name, github.run_id, github.run_attempt) || 'ubuntu-latest' }}
    env:
      BASE_IMAGE_VERSION: "1.0.1"
      SCANNER_IMAGE_VERSION: "1.0.2"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Remove existing terraform state lock
        continue-on-error: true
        run: |
          aws dynamodb delete-item \
            --table-name docker-image-4codebuild-tfstate-lock \
            --key '{"LockID": {"S": "docker-image-4codebuild-tfstate/terraform.tfstate"}}' \
            --region us-east-1

      - name: Terraform Init
        run: |
          cd terraform
          terraform init -upgrade

      - name: Terraform Plan
        if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
        run: |
          cd terraform
          terraform plan -no-color \
            -var="aws_region=us-east-1" \
            -var="ecr_repo_name=docker-image-4codebuild-repo" \
            -var="docker_builder_project_name=docker-image-4codebuild" \
            -var="code_scanner_project_name=code-scanner-4codebuild" \
            -var="base_image_version=${{ env.BASE_IMAGE_VERSION }}" \
            -var="scanner_image_version=${{ env.SCANNER_IMAGE_VERSION }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && inputs.apply_changes == true)
        run: |
          cd terraform
          terraform apply -auto-approve \
            -var="aws_region=us-east-1" \
            -var="ecr_repo_name=docker-image-4codebuild-repo" \
            -var="docker_builder_project_name=docker-image-4codebuild" \
            -var="code_scanner_project_name=code-scanner-4codebuild" \
            -var="base_image_version=${{ env.BASE_IMAGE_VERSION }}" \
            -var="scanner_image_version=${{ env.SCANNER_IMAGE_VERSION }}"
