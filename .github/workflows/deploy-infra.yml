# aws-codebuild-docker-image/.github/workflows/deploy-infra.yml

name: Deploy AWS Infrastructure

on:
  push:
    branches:
      - master
  workflow_dispatch: # Allow manual trigger

jobs:
  DeployECRAndCodeBuild:
    runs-on: ubuntu-latest
    env:
      BASE_IMAGE_VERSION: "1.0.1"
      SCANNER_IMAGE_VERSION: "1.0.0"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Remove existing terraform state lock
        continue-on-error: true
        run: |
          aws dynamodb delete-item \
            --table-name docker-image-4codebuild-tfstate-lock \
            --key '{"LockID": {"S": "docker-image-4codebuild-tfstate/terraform.tfstate"}}' \
            --region us-east-1

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: |
          cd terraform
          terraform plan -no-color \
            -var="aws_region=us-east-1" \
            -var="ecr_repo_name=docker-image-4codebuild-repo" \
            -var="docker_builder_project_name=docker-image-4codebuild" \
            -var="code_scanner_project_name=code-scanner-4codebuild" \
            -var="base_image_version=${{ env.BASE_IMAGE_VERSION }}" \
            -var="scanner_image_version=${{ env.SCANNER_IMAGE_VERSION }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master'
        run: |
          cd terraform
          terraform apply -auto-approve \
            -var="aws_region=us-east-1" \
            -var="ecr_repo_name=docker-image-4codebuild-repo" \
            -var="docker_builder_project_name=docker-image-4codebuild" \
            -var="code_scanner_project_name=code-scanner-4codebuild" \
            -var="base_image_version=${{ env.BASE_IMAGE_VERSION }}" \
            -var="scanner_image_version=${{ env.SCANNER_IMAGE_VERSION }}"

      - name: Set and Upload Versions
        if: github.ref == 'refs/heads/master'
        id: set_version
        run: |
          echo "base_version=${{ env.BASE_IMAGE_VERSION }}" >> $GITHUB_OUTPUT
          echo "scanner_version=${{ env.SCANNER_IMAGE_VERSION }}" >> $GITHUB_OUTPUT
          
          # Create version files for artifacts
          echo "${{ env.BASE_IMAGE_VERSION }}" > base_version.txt
          echo "${{ env.SCANNER_IMAGE_VERSION }}" > scanner_version.txt
          
          # Write to step summary for visibility
          echo "## Workflow Outputs" >> $GITHUB_STEP_SUMMARY
          echo "* Base Image Version: ${{ env.BASE_IMAGE_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "* Scanner Image Version: ${{ env.SCANNER_IMAGE_VERSION }}" >> $GITHUB_STEP_SUMMARY

      - name: Upload Version Artifacts
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
          name: version-info
          path: |
            base_version.txt
            scanner_version.txt
          retention-days: 1