name: PR Status Commenter

on:
  check_suite:
    types: [completed]
  check_run:
    types: [completed]

jobs:
  comment-on-pr:
    runs-on: ubuntu-latest
    if: github.event.check_suite.conclusion != 'skipped'
    steps:
      - name: Get PR Information
        id: get-pr
        uses: actions/github-script@v7
        with:
          script: |
            const { data: checkSuite } = await github.rest.checks.getSuite({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_suite_id: context.payload.check_suite.id
            });

            if (checkSuite.pull_requests && checkSuite.pull_requests.length > 0) {
              const pr = checkSuite.pull_requests[0];
              core.setOutput('pr-number', pr.number);
              core.setOutput('pr-title', pr.title);
              return pr.number;
            }
            return null;

      - name: Check All Required Checks
        id: check-status
        if: steps.get-pr.outputs.pr-number
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.get-pr.outputs.pr-number }};

            // Get all check runs for this PR
            const { data: checkRuns } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.check_suite.head_sha
            });

            // Filter for required checks (you can customize this list)
            const requiredChecks = ['pre-commit', 'terraform-lint'];
            const relevantChecks = checkRuns.check_runs.filter(check =>
              requiredChecks.some(required => check.name.toLowerCase().includes(required.toLowerCase()))
            );

            // Check if all required checks are completed and successful
            const allCompleted = relevantChecks.every(check => check.status === 'completed');
            const allSuccessful = relevantChecks.every(check => check.conclusion === 'success');

            core.setOutput('all-completed', allCompleted);
            core.setOutput('all-successful', allSuccessful);

            console.log(`Required checks: ${relevantChecks.map(c => c.name).join(', ')}`);
            console.log(`All completed: ${allCompleted}`);
            console.log(`All successful: ${allSuccessful}`);

      - name: Post Success Comment
        if: steps.check-status.outputs.all-completed == 'true' && steps.check-status.outputs.all-successful == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.get-pr.outputs.pr-number }};

            // Check for existing success comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            const existingComment = comments.find(comment =>
              comment.user.login === 'github-actions[bot]' &&
              comment.body.includes('‚úÖ All PR checks passed successfully!')
            );

            if (!existingComment) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: `‚úÖ **All PR checks passed successfully!**

                üéâ Great job! All automated checks have completed successfully:
                - ‚úÖ Pre-commit checks
                - ‚úÖ Terraform linting

                This PR is ready for review! üöÄ

                *This comment was automatically posted by the PR Status Commenter App.*`
              });
            }

      - name: Post Failure Comment
        if: steps.check-status.outputs.all-completed == 'true' && steps.check-status.outputs.all-successful == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.get-pr.outputs.pr-number }};

            // Check for existing failure comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            const existingComment = comments.find(comment =>
              comment.user.login === 'github-actions[bot]' &&
              comment.body.includes('‚ùå Some PR checks failed')
            );

            if (!existingComment) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: `‚ùå **Some PR checks failed**

                Please review the failed checks and fix any issues before requesting a review.

                You can view the detailed results in the [Checks tab](https://github.com/${{ github.repository }}/pull/${{ steps.get-pr.outputs.pr-number }}/checks).

                *This comment was automatically posted by the PR Status Commenter App.*`
              });
            }
