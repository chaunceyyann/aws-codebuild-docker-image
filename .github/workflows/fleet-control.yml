name: 'Fleet Control'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Fleet control action to perform'
        required: true
        default: 'status'
        type: choice
        options:
          - status
          - start
          - stop
          - monitor
          - init
          - switch_to_fleet
          - switch_to_ondemand
          - scheduled_control
          - enable_scheduler
          - disable_scheduler
      target_capacity:
        description: 'Target capacity for start action'
        required: false
        default: '2'
        type: string
      project_names:
        description: 'Comma-separated list of CodeBuild project names (for switch actions)'
        required: false
        default: ''
        type: string
      schedule_type:
        description: 'Schedule type for scheduled_control'
        required: false
        default: 'business_hours'
        type: choice
        options:
          - business_hours
          - weekend
          - custom
          - smart
      aws_region:
        description: 'AWS region'
        required: false
        default: 'us-east-1'
        type: string

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  fleet-control:
    name: 'Fleet Control'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Install dependencies'
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: 'Run fleet control action'
        uses: ./.github/actions/fleet-control
        with:
          action: ${{ github.event.inputs.action }}
          target_capacity: ${{ github.event.inputs.target_capacity }}
          project_names: ${{ github.event.inputs.project_names }}
          schedule_type: ${{ github.event.inputs.schedule_type }}
          aws_region: ${{ github.event.inputs.aws_region }}

      - name: 'Display action summary'
        if: always()
        run: |
          echo "## Fleet Control Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Action:** ${{ github.event.inputs.action }}" >> $GITHUB_STEP_SUMMARY
          echo "**Target Capacity:** ${{ github.event.inputs.target_capacity }}" >> $GITHUB_STEP_SUMMARY
          echo "**AWS Region:** ${{ github.event.inputs.aws_region }}" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ github.event.inputs.project_names }}" ]; then
            echo "**Project Names:** ${{ github.event.inputs.project_names }}" >> $GITHUB_STEP_SUMMARY
          fi
          if [ "${{ github.event.inputs.action }}" = "scheduled_control" ]; then
            echo "**Schedule Type:** ${{ github.event.inputs.schedule_type }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "**Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered at:** $(date -u)" >> $GITHUB_STEP_SUMMARY
